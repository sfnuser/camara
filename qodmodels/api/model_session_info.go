/*
QoD for enhanced communication

Service Enabling Network Function API for QoS control

API version: 0.8.0
Contact: project-email@sample.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SessionInfo Session related information.
type SessionInfo struct {
	// Session duration in seconds. Maximal value of 24 hours is used if not set. After session has expired the client will receive SESSION_TERMINATED event. See notification callback. 
	Duration int32 `json:"duration" bson:"duration"`
	UeId UeId `json:"ueId" bson:"ueId"`
	AsId AsId `json:"asId" bson:"asId"`
	UePorts *PortsSpec `json:"uePorts,omitempty" bson:"uePorts,omitempty"`
	AsPorts *PortsSpec `json:"asPorts,omitempty" bson:"asPorts,omitempty"`
	Qos QosProfile `json:"qos" bson:"qos"`
	// Allows asynchronous delivery of session related events
	NotificationUri *string `json:"notificationUri,omitempty" bson:"notificationUri,omitempty"`
	// Authentification token for callback API
	NotificationAuthToken *string `json:"notificationAuthToken,omitempty" bson:"notificationAuthToken,omitempty"`
	// Session ID in UUID format
	Id string `json:"id" bson:"id"`
	// Timestamp of session start in seconds since unix epoch
	StartedAt int64 `json:"startedAt" bson:"startedAt"`
	// Timestamp of session expiration if the session was not deleted, in seconds since unix epoch
	ExpiresAt int64 `json:"expiresAt" bson:"expiresAt"`
	Messages []Message `json:"messages,omitempty" bson:"messages,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SessionInfo SessionInfo

// NewSessionInfo instantiates a new SessionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionInfo(duration int32, ueId UeId, asId AsId, qos QosProfile, id string, startedAt int64, expiresAt int64) *SessionInfo {
	this := SessionInfo{}
	this.Duration = duration
	this.UeId = ueId
	this.AsId = asId
	this.Qos = qos
	this.Id = id
	this.StartedAt = startedAt
	this.ExpiresAt = expiresAt
	return &this
}

// NewSessionInfoWithDefaults instantiates a new SessionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionInfoWithDefaults() *SessionInfo {
	this := SessionInfo{}
	var duration int32 = 86400
	this.Duration = duration
	return &this
}

// GetDuration returns the Duration field value
func (o *SessionInfo) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetDurationOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *SessionInfo) SetDuration(v int32) {
	o.Duration = v
}

// GetUeId returns the UeId field value
func (o *SessionInfo) GetUeId() UeId {
	if o == nil {
		var ret UeId
		return ret
	}

	return o.UeId
}

// GetUeIdOk returns a tuple with the UeId field value
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetUeIdOk() (*UeId, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UeId, true
}

// SetUeId sets field value
func (o *SessionInfo) SetUeId(v UeId) {
	o.UeId = v
}

// GetAsId returns the AsId field value
func (o *SessionInfo) GetAsId() AsId {
	if o == nil {
		var ret AsId
		return ret
	}

	return o.AsId
}

// GetAsIdOk returns a tuple with the AsId field value
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetAsIdOk() (*AsId, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AsId, true
}

// SetAsId sets field value
func (o *SessionInfo) SetAsId(v AsId) {
	o.AsId = v
}

// GetUePorts returns the UePorts field value if set, zero value otherwise.
func (o *SessionInfo) GetUePorts() PortsSpec {
	if o == nil || isNil(o.UePorts) {
		var ret PortsSpec
		return ret
	}
	return *o.UePorts
}

// GetUePortsOk returns a tuple with the UePorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetUePortsOk() (*PortsSpec, bool) {
	if o == nil || isNil(o.UePorts) {
    return nil, false
	}
	return o.UePorts, true
}

// HasUePorts returns a boolean if a field has been set.
func (o *SessionInfo) HasUePorts() bool {
	if o != nil && !isNil(o.UePorts) {
		return true
	}

	return false
}

// SetUePorts gets a reference to the given PortsSpec and assigns it to the UePorts field.
func (o *SessionInfo) SetUePorts(v PortsSpec) {
	o.UePorts = &v
}

// GetAsPorts returns the AsPorts field value if set, zero value otherwise.
func (o *SessionInfo) GetAsPorts() PortsSpec {
	if o == nil || isNil(o.AsPorts) {
		var ret PortsSpec
		return ret
	}
	return *o.AsPorts
}

// GetAsPortsOk returns a tuple with the AsPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetAsPortsOk() (*PortsSpec, bool) {
	if o == nil || isNil(o.AsPorts) {
    return nil, false
	}
	return o.AsPorts, true
}

// HasAsPorts returns a boolean if a field has been set.
func (o *SessionInfo) HasAsPorts() bool {
	if o != nil && !isNil(o.AsPorts) {
		return true
	}

	return false
}

// SetAsPorts gets a reference to the given PortsSpec and assigns it to the AsPorts field.
func (o *SessionInfo) SetAsPorts(v PortsSpec) {
	o.AsPorts = &v
}

// GetQos returns the Qos field value
func (o *SessionInfo) GetQos() QosProfile {
	if o == nil {
		var ret QosProfile
		return ret
	}

	return o.Qos
}

// GetQosOk returns a tuple with the Qos field value
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetQosOk() (*QosProfile, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Qos, true
}

// SetQos sets field value
func (o *SessionInfo) SetQos(v QosProfile) {
	o.Qos = v
}

// GetNotificationUri returns the NotificationUri field value if set, zero value otherwise.
func (o *SessionInfo) GetNotificationUri() string {
	if o == nil || isNil(o.NotificationUri) {
		var ret string
		return ret
	}
	return *o.NotificationUri
}

// GetNotificationUriOk returns a tuple with the NotificationUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetNotificationUriOk() (*string, bool) {
	if o == nil || isNil(o.NotificationUri) {
    return nil, false
	}
	return o.NotificationUri, true
}

// HasNotificationUri returns a boolean if a field has been set.
func (o *SessionInfo) HasNotificationUri() bool {
	if o != nil && !isNil(o.NotificationUri) {
		return true
	}

	return false
}

// SetNotificationUri gets a reference to the given string and assigns it to the NotificationUri field.
func (o *SessionInfo) SetNotificationUri(v string) {
	o.NotificationUri = &v
}

// GetNotificationAuthToken returns the NotificationAuthToken field value if set, zero value otherwise.
func (o *SessionInfo) GetNotificationAuthToken() string {
	if o == nil || isNil(o.NotificationAuthToken) {
		var ret string
		return ret
	}
	return *o.NotificationAuthToken
}

// GetNotificationAuthTokenOk returns a tuple with the NotificationAuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetNotificationAuthTokenOk() (*string, bool) {
	if o == nil || isNil(o.NotificationAuthToken) {
    return nil, false
	}
	return o.NotificationAuthToken, true
}

// HasNotificationAuthToken returns a boolean if a field has been set.
func (o *SessionInfo) HasNotificationAuthToken() bool {
	if o != nil && !isNil(o.NotificationAuthToken) {
		return true
	}

	return false
}

// SetNotificationAuthToken gets a reference to the given string and assigns it to the NotificationAuthToken field.
func (o *SessionInfo) SetNotificationAuthToken(v string) {
	o.NotificationAuthToken = &v
}

// GetId returns the Id field value
func (o *SessionInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SessionInfo) SetId(v string) {
	o.Id = v
}

// GetStartedAt returns the StartedAt field value
func (o *SessionInfo) GetStartedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetStartedAtOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *SessionInfo) SetStartedAt(v int64) {
	o.StartedAt = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *SessionInfo) GetExpiresAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetExpiresAtOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *SessionInfo) SetExpiresAt(v int64) {
	o.ExpiresAt = v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *SessionInfo) GetMessages() []Message {
	if o == nil || isNil(o.Messages) {
		var ret []Message
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionInfo) GetMessagesOk() ([]Message, bool) {
	if o == nil || isNil(o.Messages) {
    return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *SessionInfo) HasMessages() bool {
	if o != nil && !isNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []Message and assigns it to the Messages field.
func (o *SessionInfo) SetMessages(v []Message) {
	o.Messages = v
}

func (o SessionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if true {
		toSerialize["ueId"] = o.UeId
	}
	if true {
		toSerialize["asId"] = o.AsId
	}
	if !isNil(o.UePorts) {
		toSerialize["uePorts"] = o.UePorts
	}
	if !isNil(o.AsPorts) {
		toSerialize["asPorts"] = o.AsPorts
	}
	if true {
		toSerialize["qos"] = o.Qos
	}
	if !isNil(o.NotificationUri) {
		toSerialize["notificationUri"] = o.NotificationUri
	}
	if !isNil(o.NotificationAuthToken) {
		toSerialize["notificationAuthToken"] = o.NotificationAuthToken
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["startedAt"] = o.StartedAt
	}
	if true {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !isNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SessionInfo) UnmarshalJSON(bytes []byte) (err error) {
	varSessionInfo := _SessionInfo{}

	if err = json.Unmarshal(bytes, &varSessionInfo); err == nil {
		*o = SessionInfo(varSessionInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "duration")
		delete(additionalProperties, "ueId")
		delete(additionalProperties, "asId")
		delete(additionalProperties, "uePorts")
		delete(additionalProperties, "asPorts")
		delete(additionalProperties, "qos")
		delete(additionalProperties, "notificationUri")
		delete(additionalProperties, "notificationAuthToken")
		delete(additionalProperties, "id")
		delete(additionalProperties, "startedAt")
		delete(additionalProperties, "expiresAt")
		delete(additionalProperties, "messages")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSessionInfo struct {
	value *SessionInfo
	isSet bool
}

func (v NullableSessionInfo) Get() *SessionInfo {
	return v.value
}

func (v *NullableSessionInfo) Set(val *SessionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionInfo(val *SessionInfo) *NullableSessionInfo {
	return &NullableSessionInfo{value: val, isSet: true}
}

func (v NullableSessionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


